Event/Timer/TrainTimer
	var/mob/trainer

	New(var/EventScheduler/scheduler, var/mob/D)
		..(scheduler, 12)
		src.trainer = D

	fire()
		..()

		//if(isnull(trainer)){training_scheduler.cancel(src);log_errors("Unable to shutdown TrainTimer, forcing it to stop.");return} // Cancels itself when it has no trainer.
		if(isnull(trainer)) {training_scheduler.cancel(src);return}

		if(trainer.icon_state=="Train"&&trainer.Ki>=(1/trainer.Recovery)*(trainer.Weight**3))
			trainer.Ki-=(1/trainer.Recovery)*(trainer.Weight**3)
			if(trainer.z==10) trainer.Ki-=9*(1/trainer.Recovery)*(trainer.Weight**3)

			var/HBTC=1
			if(trainer.z==10) HBTC=10
			trainer.Base+= 10*GG*trainer.BPMod*trainer.Weight*HBTC*(trainer.BPRank/2)*trainer.Gain_Multiplier
			trainer.MaxKi+=0.001*trainer.KiMod
			if(trainer.pfocus=="Balanced")// Added *TESTGAIN for the test server
				if(prob(10)) trainer.Str+=0.05*trainer.StrMod*TESTGAIN
				if(prob(10)) trainer.End+=0.05*trainer.EndMod*TESTGAIN
			else if(trainer.pfocus=="Strength") if(prob(10)) trainer.Str+=0.1*trainer.StrMod*TESTGAIN
			else if(trainer.pfocus=="Endurance") if(prob(10)) trainer.End+=0.1*trainer.EndMod*TESTGAIN
			if(prob(10)) trainer.Spd+=0.017*trainer.SpdMod
			trainer.Increase_Gain_Multiplier(1)

/*
		else if( icon_state=="Flight"|| icon_state=="Meditate"|| icon_state=="KO"|| attacking )
			training_scheduler.cancel(src)
			player.training_event = null
*/

		else
			trainer.Cancel_Training()
			//trainer << "You stop training."
			trainer=null
			/*
			* Trainer=null Is a dirty trick intent to make sure \
			* the proc actually shuts down when you're KO'd.
			* Else it'll wait until you're back up until it actually STOPS the proc.
			*/

mob/var/tmp/Event/Timer/TrainTimer/training_event = null

mob/proc/Cancel_Training() // Cancel training is used for both meditating AND training.
	if(!istype(src,/mob/player)) return
	if (src.training_event)
		training_scheduler.cancel(src.training_event)
		spawn(20) src.training_event = null

	if( src.icon_state=="Flight" || src.icon_state=="KO" || src.attacking ) return
	else
		src.icon_state = ""
		src.move=1

mob/verb/Train()
	set category="Skills"
	if( icon_state=="Flight"|| icon_state=="Meditate"|| icon_state=="KO"|| icon_state=="KB"|| attacking ) return
	if(isnull(src.training_event))
		if(isnull(src.meditating_event)&&isnull(usr.fly_event)) // This is just so the 'you stop training' shit doesnt show when it's still waiting to cancel and/or meditate.

			if(icon_state!="Train"&&Ki>=1&&move)
				dir=SOUTH
				icon_state="Train"
				src.training_event = new(training_scheduler, src)
				training_scheduler.schedule(src.training_event, 12)

/*
		for (var/mob/player/M in world)
			if (src != M && src.client.address == M.client.address)
				M.Cancel_Training()
*/

	else
		Cancel_Training()
		src << "You stop training."